/**
 * Created by jonybang on 12.08.15.
 */
'use strict';

var app = angular.module('app.forums');

app.controller('ForumsCtrl', ['$scope', '$state', '$timeout', '$modal', 'Forum', 'ForumEvent', 'ForumEventEditor', 'Person', 'PersonEditor', 'RoomEditor', 'Helpers', function($scope, $state, $timeout, $modal, Forum, ForumEvent, ForumEventEditor, Person, PersonEditor, RoomEditor, Helpers) {
    var begin_hour = 8;

    var self = this;

    self.cur_forum = $scope.cur_forum = {};

    self.changedToggle = false;
    $scope.popover = {
        adminsOpen: false,
        volunteersOpen: false,
        memberTemplate:'<%= asset_path('angular/modules/forums/templates/popoverTeamMember.html') %>'
    };
    $scope.preparePopover = function(forum, role){
        forum['expand_' + role + 's'] = true;

        $scope.popover.role = role;

        var options = {};
        options['exclude_forum_' + role + 's'] = forum.id;
        Person.query(options).then(function(persons){
            $scope.popover.persons = persons;
        })
    };
    $scope.popoverContentClick = function($event){
        if(!angular.element($event.target).hasClass('btn'))
            $event.stopPropagation();
    };

    Forum.query({organization_id: $state.params.organizationId}).then(function(forums) {
        $scope.forums = forums;
        if(!forums.length)
            return;

        if(!$state.params.forumId){
            $scope.setCurForum(forums[forums.length - 1]);
        } else {
            Helpers.findById(forums, $state.params.forumId, function(forum){
                $scope.setCurForum(forum);
            });
        }
        $scope.forums.forEach(function(forum){
            forum.grouped_events = Helpers.groupByDate(forum.events, 'begin_date', 'events');
        });
    });

    $scope.setCurForum = function(forum){
        angular.extend($scope.cur_forum, forum);

        if(!$state.params.forumId || $state.params.forumId != forum.id)
            $state.go('app.organizations.show.forums.show', {forumId: forum.id});
    };

    $scope.new_forum = {};
    $scope.blurForumInput = function(){
        $timeout(function(){
            $scope.new_forum = {};
        }, 100);
    };
    $scope.saveNewForum = function(){
        var forum = new Forum({name: $scope.new_forum.name, organization_id: $state.params.organizationId, admin_ids:[$scope.app.person.id] }).create();
        forum.then(function(result){
            result.expand_admins = true;
            $scope.forums.push(result);

            $scope.setCurForum(result);
            $scope.new_forum = {};
        });
    };
    this.newOrEditTeamMember = $scope.newOrEditTeamMember = function(forum, role, person){
        forum['expand_' + role + 's'] = true;

        var inputs = {};
        inputs[role + '_forum_ids'] = [forum.id];

        PersonEditor(inputs, person).then(function(result){
            Helpers.addOrReplace(forum[role + 's'], result, result.id, true);
            Helpers.pushIdIfNotExist(forum[role + '_ids'], result.id);
        });
    };
    this.newOrEditRoom = $scope.newOrEditRoom = function(forum, room){
        RoomEditor({forum_id: forum.id}, room).then(function(result){
            Helpers.addOrReplace(forum.rooms, result, result.id, true);

            self.changedToggle = !self.changedToggle;
        });
    };
    this.newOrEditEvent = $scope.newOrEditEvent = function(forum, event_group, event){

        if(event_group){
            event_group.expand = true;

            var begin_date;
            if(event_group.begin_date){
                begin_date = angular.copy(event_group.begin_date);
                begin_date.setHours(begin_hour);
            }

            var room_id;
            if(event_group.class == 'Room')
                room_id = event_group.id;
        }

        ForumEventEditor({forum_id: forum.id, begin_date: begin_date, room_id: room_id}, event).then(function(result){
            if(!forum.events)
                forum.events = [];

            if(event_group && event_group.class == 'Room' && result.room_id == event_group.id)
                Helpers.addOrReplace(event_group.events, result, result.id, true);
            else
                Helpers.addItemToParentObjectInArrayById(forum.rooms, result, result.room_id, 'events');

            Helpers.addOrReplace(forum.events, result, result.id, true);

            forum.grouped_events = Helpers.groupByDate(forum.events, 'begin_date', 'events');
            forum.grouped_events.forEach(function(obj){
                if(Helpers.findById(obj.events, result.id))
                    obj.expand = true;
            });

            if(!forum.rooms || !forum.rooms.length){
                forum.GetRooms();
            }
            self.changedToggle = !self.changedToggle;
        });
    };
    this.eventDeleted = $scope.eventDeleted = function(event_group, index){
        var event = event_group.events[index];
        event_group.events.splice(index, 1);

        if(!event_group.begin_date){
            Helpers.deleteByIdInGroups($scope.cur_forum.grouped_events, 'events', event.id);
        }

        if(event_group.class != 'Room'){
            Helpers.deleteByIdInGroups($scope.cur_forum.rooms, 'events', event.id);
        }

        self.changedToggle = !self.changedToggle;
    };
    this.memberDelete = $scope.memberDelete = function(id, role){
        return $scope.cur_forum.DeletePerson(id, role);
    };
    $scope.addMember = function(member, role){
//        Helpers.addOrReplace(forum[role + 's'], member, member.id, true);
//
//        Helpers.pushIdIfNotExist(forum[role + '_ids'], member.id);
//        var forum_promise = new Forum(forum).update();
        return $scope.cur_forum.AddPerson(member.id, role);
    };
}]);

app.controller('ForumsShowCtrl', ['$scope', '$state', '$timeout', 'Forum', 'Helpers', function($scope, $state, $timeout, Forum, Helpers) {
    $scope.tabsData = [
        { route : 'app.organizations.show.forums.show.events', heading : 'Расписание' },
        { route : 'app.organizations.show.forums.show.table_events', heading : 'События' },
        { route : 'app.organizations.show.forums.show.news', heading : 'Новости' },
        { route : 'app.organizations.show.forums.show.rooms', heading : 'Площадки' },
        { route : '#', heading : 'Материалы', disabled: true },
        { route : '#', heading : 'Чат', disabled: true }
    ];
    var self = this;
    self.current = {
        events: []
    };
    Forum.get($state.params.forumId).then(function(forum){
        console.log('forum before', $scope.forumsCtrl.cur_forum);
        angular.extend($scope.forumsCtrl.cur_forum, forum);
        //$scope.forumsCtrl.cur_forum = forum;
        console.log('forum after', $scope.forumsCtrl.cur_forum);
        self.current = $scope.forumsCtrl.cur_forum;
        $scope.forumsCtrl.cur_forum.grouped_events = Helpers.groupByDate($scope.forumsCtrl.cur_forum.events, 'begin_date', 'events');
        console.log('grouped_events', $scope.forumsCtrl.cur_forum.grouped_events);
    });
}]);

app.controller('ForumsFormCtrl', ['$scope', '$timeout', 'Forum', '$noty', function($scope, $timeout, Forum, $noty) {
    $scope.forum = $scope.forumsCtrl.cur_forum;

    $scope.save = function() {
        $scope.$broadcast('show-errors-check-validity');
        if (!$scope.forumForm.$valid) {
            $noty.show({text:'В форме найдены ошибки, попробуйте исправить их и отправить данные снова', type:'warning'});
            return;
        }
        var result = new Forum($scope.forum).save();
        result.then(function(data){
            angular.extend($scope.forumsCtrl.cur_forum, data);
            $noty.show({text:'Успешно сохранено', type:'success'});
        });
        //$modalInstance.close($scope.event);
    }
}]);