/**
 * Created by jonybang on 10.08.15.
 */
'use strict';

var app = angular.module('app.events');

app.controller('EventsCtrl', ['$scope', 'ForumEvent', 'ForumEventEditor', 'EventType', 'Room', 'Helpers', '$state', '$modal', function($scope, ForumEvent, ForumEventEditor, EventType, Room, Helpers, $state, $modal) {
    function getEvents(){
        ForumEvent.query({forum_id: $state.params.forumId, sort:'begin_date_ASC'}).then(function(events){
            $scope.events = events;
            getRoomsAndGroupEvents();
        });
    }
    function getRoomsAndGroupEvents(){
        Room.query({forum_id: $state.params.forumId}).then(function(rooms){
            $scope.rooms = rooms;
            $scope.grouped_events = Helpers.groupByDate($scope.events, 'begin_date', 'events');
            if($scope.grouped_events && $scope.grouped_events.length){
                $scope.grouped_events.forEach(function(obj){
                    obj.rooms = angular.copy(rooms);
                })
            }
        });
    }

    //TODO: сделать через соккеты
    $scope.$watch('forumsCtrl.changedToggle', function(){
        getEvents();
    });

    $scope.roomsEventsChanged = function(){
        $scope.roomsToggleChanged = !$scope.roomsToggleChanged;
    };

    $scope.$watchCollection('forumsCtrl.cur_forum.events', function(){
        getEvents();
    });

    EventType.query().then(function(types){
        $scope.event_types = types;
    });

    $scope.saveRooms = function(){
        if($scope.grouped_events && $scope.grouped_events.length){
            $scope.grouped_events.forEach(function(obj){
                obj.events.forEach(function(event){
                    var obj = new ForumEvent(event).save().then(function success (result){
                        //nothing
                    });
                });
            })
        }
    };
    $scope.saveEvent = function (event){
        var obj = new ForumEvent(event).save().then(function success (result){
            angular.extend(event, result);
            event.edit = false;
        });
    };
    $scope.addEventRow = function(forum, event){
        $scope.events.unshift({edit:true, forum_id: forum.id, is_new: true});
    };
    $scope.newOrEditEvent = function(forum, event, resetRooms){
        ForumEventEditor({forum_id: forum.id}, event).then(function(result){
            Helpers.addOrReplace($scope.events, result, result.id, true);
            if(resetRooms){
                getRoomsAndGroupEvents();
            }
        });
    };
}]);


app.controller('EventsFormCtrl', ['$scope', '$timeout', 'ForumEvent', 'EventType', 'Room', 'Color', 'Helpers', '$modalInstance', 'object', function($scope, $timeout, ForumEvent, EventType, Room, Color, Helpers, $modalInstance, object) {
    $scope.errors = [];
    $timeout(function(){
        $scope.event = object;

        if(!$scope.event.id){
            $scope.duration = new Date();
            $scope.beginDateChanged();
        }
        else{
            endDateChanged();
        }

        $scope.duration_mode = true;
    });
    $scope.popoverAddRoom = '<%= asset_path('angular/modules/rooms/templates/popoverAddRoom.html') %>';
    $scope.popoverAddEventType = '<%= asset_path('angular/modules/events/templates/popoverAddEventType.html') %>';

    EventType.query().then(function(types){
        $scope.event_types = types;
    });
    Room.query({forum_id: object.forum_id}).then(function(rooms){
        $scope.rooms = rooms;
    });
    Color.query().then(function(colors){
        $scope.colors = colors;
    });

    $scope.selectType = function(eventType) {
        $scope.event.color_id = eventType.color.id;
    };
    $scope.addRoom = function(new_room){
        $scope.rooms.push(new_room);
        $scope.event.room_id = new_room.id;
        var result = new Room({name: new_room.name, number: new_room.number, forum_id: $scope.event.forum_id}).save().then(function(data){
            angular.extend(new_room, data);
            $scope.event.room_id = data.id;
        });
    };
    $scope.addEventType = function(new_type){
        $scope.event_types.push(new_type);
        $scope.event.event_type_id = new_type.id;
        $scope.event.color_id = new_type.color_id;
        var result = new EventType({name: new_type.name, color_id: new_type.color_id, forum_id: $scope.event.forum_id}).save().then(function(data){
            angular.extend(new_type, data);
            $scope.event.event_type_id = data.id;
        });
    };

    $scope.beginDateChanged = function(){
        if(!$scope.event.end_date){
            $scope.event.end_date = angular.copy($scope.event.begin_date);

            $scope.duration = Helpers.setDateTime(new Date(), 1, 0);
            $scope.durationChanged();
        } else if($scope.duration_mode) {
            $scope.durationChanged();
        }
        console.log('beginDateChanged');
    };

    $scope.durationChanged = function (duration){
        console.log('durationChanged');
        if(!$scope.duration_mode || !$scope.event)
            return;
        if(duration)
            $scope.duration = duration;
        $scope.event.end_date = Helpers.setDateTime($scope.event.begin_date, $scope.duration.getHours(), $scope.duration.getMinutes(), true);
    };
    function endDateChanged(){
        if($scope.duration_mode || !$scope.event)
            return;

        var minutes_duration = Helpers.minutesDuration($scope.event.begin_date, $scope.event.end_date);
        var new_duration;
        if(minutes_duration > 24*60){
            new_duration = Helpers.setDateTime(new Date(), 0, 0);
        } else {
            new_duration = Helpers.setDateTime(new Date(), 0, Math.ceil(minutes_duration));
        }
        //not working if calling from watch, i dont know why :(
        $scope.duration = new_duration;

        console.log('endDateChanged, duration:', $scope.duration);
    }
    $scope.$watch('event.end_date', endDateChanged);
    $scope.changeDurationMode = function(new_val){
        $scope.duration_mode = new_val;
    };

    $scope.save = function() {
        $scope.eventForm.end_date.$validate();
        $scope.$broadcast('show-errors-check-validity');

        if (!$scope.eventForm.$valid) {
            return;
        }
        var new_room;
        if($scope.event.room && !$scope.event.room.id){
            console.log($scope.event.room);
            return;
            //new_room = new Room({name: $scope.event.room}).save()
        }
        if(!new_room){
            $modalInstance.close($scope.event);
        } else {
            new_room.then(function(result){
                $modalInstance.close($scope.event);
            });
        }

    }
}]);