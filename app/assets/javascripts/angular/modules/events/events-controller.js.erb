/**
 * Created by jonybang on 10.08.15.
 */
'use strict';

var app = angular.module('app.events');

app.controller('EventsCtrl', ['$scope', 'ForumEvent', 'ForumEventEditor', 'EventType', 'Room', 'Helpers', '$state', '$modal', function($scope, ForumEvent, ForumEventEditor, EventType, Room, Helpers, $state, $modal) {
    function getEvents(){
        ForumEvent.query({forum_id: $state.params.forumId, sort:'begin_date_ASC'}).then(function(events){
            $scope.events = events;
            $scope.grouped_events = Helpers.groupByDate(events, 'begin_date', 'events');
        });
    }

    $scope.roomsEventsChanged = function(){
        $scope.toggleChanged = !$scope.toggleChanged;
    };

    $scope.$watchCollection('forumsCtrl.cur_forum.events', function(){
        getEvents();
    });

    EventType.query().then(function(types){
        $scope.event_types = types;
    });
    Room.query().then(function(rooms){
        $scope.rooms = rooms;
    });
    $scope.saveRooms = function(){
        $scope.rooms.forEach(function(room){
            var obj = new Room(room).save().then(function success (result){
                //nothing
            });
        });
    };
    $scope.saveEvent = function (event){
        var obj = new ForumEvent(event).save().then(function success (result){
            angular.extend(event, result);
            event.edit = false;
        });
    };
    $scope.newOrEditEvent = function(forum, event){
        $scope.events.unshift({edit:true, forum_id: forum.id});
    };
    $scope.newOrEditEvent1 = function(forum, event){
        ForumEventEditor({forum_id: forum.id}, event).then(function(result){
            Helpers.addOrReplace($scope.events, result, result.id, true);
        });
    };
}]);


app.controller('EventsFormCtrl', ['$scope', '$timeout', 'ForumEvent', 'EventType', 'Room', '$modalInstance', 'object', function($scope, $timeout, ForumEvent, EventType, Room, $modalInstance, object) {
    $timeout(function(){
        $scope.event = object;
    });

    EventType.query().then(function(types){
        $scope.event_types = types;
    });
    Room.query({forum_id: object.forum_id}).then(function(rooms){
        $scope.rooms = rooms;
    });

    $scope.save = function() {
        $scope.$broadcast('show-errors-check-validity');
        if (!$scope.eventForm.$valid) {
            return;
        }
        $modalInstance.close($scope.event);
    }
}]);